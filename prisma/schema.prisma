// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model Diamond {
  id                          String    @id @default(cuid())
  itemId                      String    @unique
  supplierStockRef            String?
  cut                         String?
  carat                       Float?
  color                       String?
  naturalFancyColor           String?
  naturalFancyColorIntensity  String?
  naturalFancyColorOvertone   String?
  treatedColor                String?
  clarity                     String?
  cutGrade                    String?
  gradingLab                  String?
  certificateNumber           String?
  certificatePath             String?
  certificateUrl              String?
  imagePath                   String?
  imageUrl                    String?
  onlineReport                String?
  onlineReportUrl             String?
  videoUrl                    String?
  threeDViewerUrl             String?
  pricePerCarat               Float?
  totalPrice                  Float?
  totalPriceSek               Float?
  priceWithMarkupSek          Float?
  finalPriceSek               Float?
  percentOffIdexList          Float?
  polish                      String?
  symmetry                    String?
  measurementsLength          Float?
  measurementsWidth           Float?
  measurementsHeight          Float?
  depthPercent                Float?
  tablePercent                Float?
  crownHeight                 Float?
  crownAngle                  Float?
  pavilionDepth               Float?
  pavilionAngle               Float?
  girdleFrom                  String?
  girdleTo                    String?
  culetSize                   String?
  culetCondition              String?
  graining                    String?
  fluorescenceIntensity       String?
  fluorescenceColor           String?
  enhancement                 String?
  country                     String?
  countryCode                 String?
  countryName                 String?
  stateRegion                 String?
  stateCode                   String?
  stateName                   String?
  pairStockRef                String?
  pairSeparable               String?
  askingPriceForPair          Float?
  askingPricePerCaratForPair  Float?
  shade                       String?
  milky                       String?
  blackInclusion              String?
  eyeClean                    String?
  provenanceReport            String?
  provenanceNumber            String?
  brand                       String?
  guaranteedAvailability      String?
  availability                String?
  type                        DiamondType
  createdAt                   DateTime  @default(now())
  updatedAt                   DateTime  @updatedAt
  importJobId                 String?
  importJob                   ImportJob? @relation(fields: [importJobId], references: [id])

  @@index([type])
  @@index([cut])
  @@index([totalPrice])
  @@index([totalPriceSek])
  @@index([priceWithMarkupSek])
  @@index([finalPriceSek])
  @@index([carat])
  @@index([color])
  @@index([clarity])
  @@index([cutGrade])
  @@index([naturalFancyColor])
  @@index([type, cut, totalPrice])
  @@index([type, totalPrice, carat])
  @@index([type, cut, carat, color, clarity])
}

model ImportJob {
  id              String      @id @default(cuid())
  type            DiamondType
  status          ImportStatus @default(PENDING)
  totalRecords    Int?
  processedRecords Int?
  startedAt       DateTime?
  completedAt     DateTime?
  error           String?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  diamonds        Diamond[]

  @@index([type, status])
  @@index([createdAt])
}

model ExchangeRate {
  id          String   @id @default(cuid())
  fromCurrency String
  toCurrency   String
  rate        Float
  source      String   @default("openexchangerates")
  validFrom   DateTime @default(now())
  validUntil  DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([fromCurrency, toCurrency, validFrom])
  @@index([fromCurrency, toCurrency])
  @@index([validFrom, validUntil])
}

enum DiamondType {
  natural
  lab
}

model MarkupInterval {
  id         String      @id @default(cuid())
  type       DiamondType
  minCarat   Float
  maxCarat   Float
  multiplier Float       @default(1.0)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt

  @@unique([type, minCarat, maxCarat])
  @@index([type])
  @@index([minCarat, maxCarat])
}

enum ImportStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  FAILED
}
